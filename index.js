// Generated by CoffeeScript 1.6.3
(function() {
  var WebSocketServer, ids, mc, sids, states, wss;

  mc = require('minecraft-protocol');

  WebSocketServer = (require('ws')).Server;

  states = mc.protocol.states;

  ids = mc.protocol.packetIDs.play.toClient;

  sids = mc.protocol.packetIDs.play.toServer;

  wss = new WebSocketServer({
    port: 1234
  });

  wss.on('connection', function(ws) {
    var client;
    ws.send('hello');
    client = mc.createClient({
      host: 'localhost',
      port: 25565,
      username: 'webuser',
      password: null
    });
    ws.on('close', function() {
      console.log('WebSocket disconnected, closing MC');
      return client.socket.end();
    });
    client.on('packet', function(p) {
      var name;
      name = mc.protocol.packetNames.play.toClient[p.id];
      p.name = name;
      return ws.send(JSON.stringify(p));
    });
    client.on('connect', function() {
      return console.log('Successfully connected to MC');
    });
    client.on([states.PLAY, ids.chat], function(p) {});
    client.on([states.PLAY, ids.disconnect], function(p) {
      return console.log("Kicked for " + p.reason);
    });
    return ws.on('message', function(msg) {
      var e, id, p, _ref;
      console.log("websocket received: " + msg);
      try {
        p = JSON.parse(msg);
      } catch (_error) {
        e = _error;
        console.log("bad message from websocket client, invalid JSON: " + msg);
        return;
      }
      id = (_ref = p.id) != null ? _ref : sids[p.name];
      if (id == null) {
        console.log("bad message from websocket client, no such id " + p.name + ": " + msg);
        return;
      }
      delete p.name;
      delete p.id;
      return client.write(id, p);
    });
  });

}).call(this);
